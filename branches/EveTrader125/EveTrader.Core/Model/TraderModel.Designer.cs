//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_Wallets_0", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Entities), "Wallets", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.Wallets))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_Entity_0", "Accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EveTrader.Core.Model.Accounts), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.Entities))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_Characters_0", "Corporations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Corporations), "Characters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.Characters))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_MarketOrders_0", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Entities), "MarketOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.MarketOrders))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_Journal_0", "Wallets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Wallets), "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.Journal))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_Transactions_0", "Wallets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Wallets), "Transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.Transactions))]
[assembly: EdmRelationshipAttribute("EveTrader.Core.Model", "FK_WalletHistories_0", "Wallets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EveTrader.Core.Model.Wallets), "WalletHistories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EveTrader.Core.Model.WalletHistories))]

#endregion

namespace EveTrader.Core.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TraderModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TraderModel object using the connection string found in the 'TraderModel' section of the application configuration file.
        /// </summary>
        public TraderModel() : base("name=TraderModel", "TraderModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TraderModel object.
        /// </summary>
        public TraderModel(string connectionString) : base(connectionString, "TraderModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TraderModel object.
        /// </summary>
        public TraderModel(EntityConnection connection) : base(connection, "TraderModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entities> Entity
        {
            get
            {
                if ((_Entity == null))
                {
                    _Entity = base.CreateObjectSet<Entities>("Entity");
                }
                return _Entity;
            }
        }
        private ObjectSet<Entities> _Entity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wallets> Wallets
        {
            get
            {
                if ((_Wallets == null))
                {
                    _Wallets = base.CreateObjectSet<Wallets>("Wallets");
                }
                return _Wallets;
            }
        }
        private ObjectSet<Wallets> _Wallets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Accounts> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Accounts>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Accounts> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journal
        {
            get
            {
                if ((_Journal == null))
                {
                    _Journal = base.CreateObjectSet<Journal>("Journal");
                }
                return _Journal;
            }
        }
        private ObjectSet<Journal> _Journal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarketOrders> MarketOrders
        {
            get
            {
                if ((_MarketOrders == null))
                {
                    _MarketOrders = base.CreateObjectSet<MarketOrders>("MarketOrders");
                }
                return _MarketOrders;
            }
        }
        private ObjectSet<MarketOrders> _MarketOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transactions> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transactions>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transactions> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WalletHistories> WalletHistories
        {
            get
            {
                if ((_WalletHistories == null))
                {
                    _WalletHistories = base.CreateObjectSet<WalletHistories>("WalletHistories");
                }
                return _WalletHistories;
            }
        }
        private ObjectSet<WalletHistories> _WalletHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationLog> ApplicationLog
        {
            get
            {
                if ((_ApplicationLog == null))
                {
                    _ApplicationLog = base.CreateObjectSet<ApplicationLog>("ApplicationLog");
                }
                return _ApplicationLog;
            }
        }
        private ObjectSet<ApplicationLog> _ApplicationLog;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntity(Entities entities)
        {
            base.AddObject("Entity", entities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wallets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWallets(Wallets wallets)
        {
            base.AddObject("Wallets", wallets);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Accounts accounts)
        {
            base.AddObject("Accounts", accounts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournal(Journal journal)
        {
            base.AddObject("Journal", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarketOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarketOrders(MarketOrders marketOrders)
        {
            base.AddObject("MarketOrders", marketOrders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transactions transactions)
        {
            base.AddObject("Transactions", transactions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WalletHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWalletHistories(WalletHistories walletHistories)
        {
            base.AddObject("WalletHistories", walletHistories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationLog(ApplicationLog applicationLog)
        {
            base.AddObject("ApplicationLog", applicationLog);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Accounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Accounts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Accounts object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="apiKey">Initial value of the ApiKey property.</param>
        public static Accounts CreateAccounts(global::System.Int64 id, global::System.String apiKey)
        {
            Accounts accounts = new Accounts();
            accounts.ID = id;
            accounts.ApiKey = apiKey;
            return accounts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApiKey
        {
            get
            {
                return _ApiKey;
            }
            set
            {
                OnApiKeyChanging(value);
                ReportPropertyChanging("ApiKey");
                _ApiKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApiKey");
                OnApiKeyChanged();
            }
        }
        private global::System.String _ApiKey;
        partial void OnApiKeyChanging(global::System.String value);
        partial void OnApiKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Entity_0", "Entity")]
        public EntityCollection<Entities> Entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entities>("EveTrader.Core.Model.FK_Entity_0", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entities>("EveTrader.Core.Model.FK_Entity_0", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="ApiJournal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApiJournal : Journal
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApiJournal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="refTypeID">Initial value of the RefTypeID property.</param>
        /// <param name="ownerName1">Initial value of the OwnerName1 property.</param>
        /// <param name="ownerID1">Initial value of the OwnerID1 property.</param>
        /// <param name="ownerName2">Initial value of the OwnerName2 property.</param>
        /// <param name="ownerID2">Initial value of the OwnerID2 property.</param>
        /// <param name="argName1">Initial value of the ArgName1 property.</param>
        /// <param name="argID1">Initial value of the ArgID1 property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="taxReceiverID">Initial value of the TaxReceiverID property.</param>
        /// <param name="taxAmount">Initial value of the TaxAmount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="externalID">Initial value of the ExternalID property.</param>
        public static ApiJournal CreateApiJournal(global::System.Int64 id, global::System.Int64 refTypeID, global::System.String ownerName1, global::System.Int64 ownerID1, global::System.String ownerName2, global::System.Int64 ownerID2, global::System.String argName1, global::System.Int64 argID1, global::System.Decimal amount, global::System.Decimal balance, global::System.String reason, global::System.Int64 taxReceiverID, global::System.Decimal taxAmount, global::System.DateTime date, global::System.Int64 externalID)
        {
            ApiJournal apiJournal = new ApiJournal();
            apiJournal.ID = id;
            apiJournal.RefTypeID = refTypeID;
            apiJournal.OwnerName1 = ownerName1;
            apiJournal.OwnerID1 = ownerID1;
            apiJournal.OwnerName2 = ownerName2;
            apiJournal.OwnerID2 = ownerID2;
            apiJournal.ArgName1 = argName1;
            apiJournal.ArgID1 = argID1;
            apiJournal.Amount = amount;
            apiJournal.Balance = balance;
            apiJournal.Reason = reason;
            apiJournal.TaxReceiverID = taxReceiverID;
            apiJournal.TaxAmount = taxAmount;
            apiJournal.Date = date;
            apiJournal.ExternalID = externalID;
            return apiJournal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExternalID
        {
            get
            {
                return _ExternalID;
            }
            set
            {
                OnExternalIDChanging(value);
                ReportPropertyChanging("ExternalID");
                _ExternalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalID");
                OnExternalIDChanged();
            }
        }
        private global::System.Int64 _ExternalID;
        partial void OnExternalIDChanging(global::System.Int64 value);
        partial void OnExternalIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="ApiTransactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApiTransactions : Transactions
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApiTransactions object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="stationName">Initial value of the StationName property.</param>
        /// <param name="transactionType">Initial value of the TransactionType property.</param>
        /// <param name="transactionFor">Initial value of the TransactionFor property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="ignored">Initial value of the Ignored property.</param>
        /// <param name="externalID">Initial value of the ExternalID property.</param>
        public static ApiTransactions CreateApiTransactions(global::System.Int64 id, global::System.Int64 quantity, global::System.String typeName, global::System.Int64 typeID, global::System.Decimal price, global::System.Int64 clientID, global::System.String clientName, global::System.Int64 stationID, global::System.String stationName, global::System.Int64 transactionType, global::System.Int64 transactionFor, global::System.DateTime date, global::System.Boolean ignored, global::System.Int64 externalID)
        {
            ApiTransactions apiTransactions = new ApiTransactions();
            apiTransactions.ID = id;
            apiTransactions.Quantity = quantity;
            apiTransactions.TypeName = typeName;
            apiTransactions.TypeID = typeID;
            apiTransactions.Price = price;
            apiTransactions.ClientID = clientID;
            apiTransactions.ClientName = clientName;
            apiTransactions.StationID = stationID;
            apiTransactions.StationName = stationName;
            apiTransactions.TransactionType = transactionType;
            apiTransactions.TransactionFor = transactionFor;
            apiTransactions.Date = date;
            apiTransactions.Ignored = ignored;
            apiTransactions.ExternalID = externalID;
            return apiTransactions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExternalID
        {
            get
            {
                return _ExternalID;
            }
            set
            {
                OnExternalIDChanging(value);
                ReportPropertyChanging("ExternalID");
                _ExternalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalID");
                OnExternalIDChanged();
            }
        }
        private global::System.Int64 _ExternalID;
        partial void OnExternalIDChanging(global::System.Int64 value);
        partial void OnExternalIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="ApplicationLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="callingClass">Initial value of the CallingClass property.</param>
        public static ApplicationLog CreateApplicationLog(global::System.Int64 id, global::System.DateTime date, global::System.String message, global::System.String callingClass)
        {
            ApplicationLog applicationLog = new ApplicationLog();
            applicationLog.ID = id;
            applicationLog.Date = date;
            applicationLog.Message = message;
            applicationLog.CallingClass = callingClass;
            return applicationLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CallingClass
        {
            get
            {
                return _CallingClass;
            }
            set
            {
                OnCallingClassChanging(value);
                ReportPropertyChanging("CallingClass");
                _CallingClass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CallingClass");
                OnCallingClassChanged();
            }
        }
        private global::System.String _CallingClass;
        partial void OnCallingClassChanging(global::System.String value);
        partial void OnCallingClassChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Characters")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Characters : Entities
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Characters object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="race">Initial value of the Race property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="bloodline">Initial value of the Bloodline property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static Characters CreateCharacters(global::System.Int64 id, global::System.String name, global::System.String race, global::System.String gender, global::System.String bloodline, global::System.Decimal balance)
        {
            Characters characters = new Characters();
            characters.ID = id;
            characters.Name = name;
            characters.Race = race;
            characters.Gender = gender;
            characters.Bloodline = bloodline;
            characters.Balance = balance;
            return characters;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Race
        {
            get
            {
                return _Race;
            }
            set
            {
                OnRaceChanging(value);
                ReportPropertyChanging("Race");
                _Race = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Race");
                OnRaceChanged();
            }
        }
        private global::System.String _Race;
        partial void OnRaceChanging(global::System.String value);
        partial void OnRaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bloodline
        {
            get
            {
                return _Bloodline;
            }
            set
            {
                OnBloodlineChanging(value);
                ReportPropertyChanging("Bloodline");
                _Bloodline = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bloodline");
                OnBloodlineChanged();
            }
        }
        private global::System.String _Bloodline;
        partial void OnBloodlineChanging(global::System.String value);
        partial void OnBloodlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Characters_0", "Corporations")]
        public Corporations Corporation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporations>("EveTrader.Core.Model.FK_Characters_0", "Corporations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporations>("EveTrader.Core.Model.FK_Characters_0", "Corporations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corporations> CorporationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corporations>("EveTrader.Core.Model.FK_Characters_0", "Corporations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corporations>("EveTrader.Core.Model.FK_Characters_0", "Corporations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Corporations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Corporations : Entities
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Corporations object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="ticker">Initial value of the Ticker property.</param>
        /// <param name="npc">Initial value of the Npc property.</param>
        /// <param name="apiCharacterID">Initial value of the ApiCharacterID property.</param>
        public static Corporations CreateCorporations(global::System.Int64 id, global::System.String name, global::System.String ticker, global::System.Boolean npc, global::System.Int64 apiCharacterID)
        {
            Corporations corporations = new Corporations();
            corporations.ID = id;
            corporations.Name = name;
            corporations.Ticker = ticker;
            corporations.Npc = npc;
            corporations.ApiCharacterID = apiCharacterID;
            return corporations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Npc
        {
            get
            {
                return _Npc;
            }
            set
            {
                OnNpcChanging(value);
                ReportPropertyChanging("Npc");
                _Npc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Npc");
                OnNpcChanged();
            }
        }
        private global::System.Boolean _Npc;
        partial void OnNpcChanging(global::System.Boolean value);
        partial void OnNpcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApiCharacterID
        {
            get
            {
                return _ApiCharacterID;
            }
            set
            {
                OnApiCharacterIDChanging(value);
                ReportPropertyChanging("ApiCharacterID");
                _ApiCharacterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApiCharacterID");
                OnApiCharacterIDChanged();
            }
        }
        private global::System.Int64 _ApiCharacterID;
        partial void OnApiCharacterIDChanging(global::System.Int64 value);
        partial void OnApiCharacterIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Characters_0", "Characters")]
        public EntityCollection<Characters> Characters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Characters>("EveTrader.Core.Model.FK_Characters_0", "Characters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Characters>("EveTrader.Core.Model.FK_Characters_0", "Characters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="CustomJournal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomJournal : Journal
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomJournal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="refTypeID">Initial value of the RefTypeID property.</param>
        /// <param name="ownerName1">Initial value of the OwnerName1 property.</param>
        /// <param name="ownerID1">Initial value of the OwnerID1 property.</param>
        /// <param name="ownerName2">Initial value of the OwnerName2 property.</param>
        /// <param name="ownerID2">Initial value of the OwnerID2 property.</param>
        /// <param name="argName1">Initial value of the ArgName1 property.</param>
        /// <param name="argID1">Initial value of the ArgID1 property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="taxReceiverID">Initial value of the TaxReceiverID property.</param>
        /// <param name="taxAmount">Initial value of the TaxAmount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static CustomJournal CreateCustomJournal(global::System.Int64 id, global::System.Int64 refTypeID, global::System.String ownerName1, global::System.Int64 ownerID1, global::System.String ownerName2, global::System.Int64 ownerID2, global::System.String argName1, global::System.Int64 argID1, global::System.Decimal amount, global::System.Decimal balance, global::System.String reason, global::System.Int64 taxReceiverID, global::System.Decimal taxAmount, global::System.DateTime date, global::System.DateTime created, global::System.String description)
        {
            CustomJournal customJournal = new CustomJournal();
            customJournal.ID = id;
            customJournal.RefTypeID = refTypeID;
            customJournal.OwnerName1 = ownerName1;
            customJournal.OwnerID1 = ownerID1;
            customJournal.OwnerName2 = ownerName2;
            customJournal.OwnerID2 = ownerID2;
            customJournal.ArgName1 = argName1;
            customJournal.ArgID1 = argID1;
            customJournal.Amount = amount;
            customJournal.Balance = balance;
            customJournal.Reason = reason;
            customJournal.TaxReceiverID = taxReceiverID;
            customJournal.TaxAmount = taxAmount;
            customJournal.Date = date;
            customJournal.Created = created;
            customJournal.Description = description;
            return customJournal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="CustomTransactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomTransactions : Transactions
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomTransactions object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="stationName">Initial value of the StationName property.</param>
        /// <param name="transactionType">Initial value of the TransactionType property.</param>
        /// <param name="transactionFor">Initial value of the TransactionFor property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="ignored">Initial value of the Ignored property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static CustomTransactions CreateCustomTransactions(global::System.Int64 id, global::System.Int64 quantity, global::System.String typeName, global::System.Int64 typeID, global::System.Decimal price, global::System.Int64 clientID, global::System.String clientName, global::System.Int64 stationID, global::System.String stationName, global::System.Int64 transactionType, global::System.Int64 transactionFor, global::System.DateTime date, global::System.Boolean ignored, global::System.DateTime created)
        {
            CustomTransactions customTransactions = new CustomTransactions();
            customTransactions.ID = id;
            customTransactions.Quantity = quantity;
            customTransactions.TypeName = typeName;
            customTransactions.TypeID = typeID;
            customTransactions.Price = price;
            customTransactions.ClientID = clientID;
            customTransactions.ClientName = clientName;
            customTransactions.StationID = stationID;
            customTransactions.StationName = stationName;
            customTransactions.TransactionType = transactionType;
            customTransactions.TransactionFor = transactionFor;
            customTransactions.Date = date;
            customTransactions.Ignored = ignored;
            customTransactions.Created = created;
            return customTransactions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Entities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Corporations))]
    [KnownTypeAttribute(typeof(Characters))]
    public partial class Entities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entities object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Entities CreateEntities(global::System.Int64 id, global::System.String name)
        {
            Entities entities = new Entities();
            entities.ID = id;
            entities.Name = name;
            return entities;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Wallets_0", "Wallets")]
        public EntityCollection<Wallets> Wallets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Wallets>("EveTrader.Core.Model.FK_Wallets_0", "Wallets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Wallets>("EveTrader.Core.Model.FK_Wallets_0", "Wallets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Entity_0", "Accounts")]
        public Accounts Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("EveTrader.Core.Model.FK_Entity_0", "Accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("EveTrader.Core.Model.FK_Entity_0", "Accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Accounts> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("EveTrader.Core.Model.FK_Entity_0", "Accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Accounts>("EveTrader.Core.Model.FK_Entity_0", "Accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_MarketOrders_0", "MarketOrders")]
        public EntityCollection<MarketOrders> MarketOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketOrders>("EveTrader.Core.Model.FK_MarketOrders_0", "MarketOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketOrders>("EveTrader.Core.Model.FK_MarketOrders_0", "MarketOrders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(ApiJournal))]
    [KnownTypeAttribute(typeof(CustomJournal))]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="refTypeID">Initial value of the RefTypeID property.</param>
        /// <param name="ownerName1">Initial value of the OwnerName1 property.</param>
        /// <param name="ownerID1">Initial value of the OwnerID1 property.</param>
        /// <param name="ownerName2">Initial value of the OwnerName2 property.</param>
        /// <param name="ownerID2">Initial value of the OwnerID2 property.</param>
        /// <param name="argName1">Initial value of the ArgName1 property.</param>
        /// <param name="argID1">Initial value of the ArgID1 property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="taxReceiverID">Initial value of the TaxReceiverID property.</param>
        /// <param name="taxAmount">Initial value of the TaxAmount property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Journal CreateJournal(global::System.Int64 id, global::System.Int64 refTypeID, global::System.String ownerName1, global::System.Int64 ownerID1, global::System.String ownerName2, global::System.Int64 ownerID2, global::System.String argName1, global::System.Int64 argID1, global::System.Decimal amount, global::System.Decimal balance, global::System.String reason, global::System.Int64 taxReceiverID, global::System.Decimal taxAmount, global::System.DateTime date)
        {
            Journal journal = new Journal();
            journal.ID = id;
            journal.RefTypeID = refTypeID;
            journal.OwnerName1 = ownerName1;
            journal.OwnerID1 = ownerID1;
            journal.OwnerName2 = ownerName2;
            journal.OwnerID2 = ownerID2;
            journal.ArgName1 = argName1;
            journal.ArgID1 = argID1;
            journal.Amount = amount;
            journal.Balance = balance;
            journal.Reason = reason;
            journal.TaxReceiverID = taxReceiverID;
            journal.TaxAmount = taxAmount;
            journal.Date = date;
            return journal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RefTypeID
        {
            get
            {
                return _RefTypeID;
            }
            set
            {
                OnRefTypeIDChanging(value);
                ReportPropertyChanging("RefTypeID");
                _RefTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefTypeID");
                OnRefTypeIDChanged();
            }
        }
        private global::System.Int64 _RefTypeID;
        partial void OnRefTypeIDChanging(global::System.Int64 value);
        partial void OnRefTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerName1
        {
            get
            {
                return _OwnerName1;
            }
            set
            {
                OnOwnerName1Changing(value);
                ReportPropertyChanging("OwnerName1");
                _OwnerName1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerName1");
                OnOwnerName1Changed();
            }
        }
        private global::System.String _OwnerName1;
        partial void OnOwnerName1Changing(global::System.String value);
        partial void OnOwnerName1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OwnerID1
        {
            get
            {
                return _OwnerID1;
            }
            set
            {
                OnOwnerID1Changing(value);
                ReportPropertyChanging("OwnerID1");
                _OwnerID1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID1");
                OnOwnerID1Changed();
            }
        }
        private global::System.Int64 _OwnerID1;
        partial void OnOwnerID1Changing(global::System.Int64 value);
        partial void OnOwnerID1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerName2
        {
            get
            {
                return _OwnerName2;
            }
            set
            {
                OnOwnerName2Changing(value);
                ReportPropertyChanging("OwnerName2");
                _OwnerName2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerName2");
                OnOwnerName2Changed();
            }
        }
        private global::System.String _OwnerName2;
        partial void OnOwnerName2Changing(global::System.String value);
        partial void OnOwnerName2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OwnerID2
        {
            get
            {
                return _OwnerID2;
            }
            set
            {
                OnOwnerID2Changing(value);
                ReportPropertyChanging("OwnerID2");
                _OwnerID2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerID2");
                OnOwnerID2Changed();
            }
        }
        private global::System.Int64 _OwnerID2;
        partial void OnOwnerID2Changing(global::System.Int64 value);
        partial void OnOwnerID2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArgName1
        {
            get
            {
                return _ArgName1;
            }
            set
            {
                OnArgName1Changing(value);
                ReportPropertyChanging("ArgName1");
                _ArgName1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ArgName1");
                OnArgName1Changed();
            }
        }
        private global::System.String _ArgName1;
        partial void OnArgName1Changing(global::System.String value);
        partial void OnArgName1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ArgID1
        {
            get
            {
                return _ArgID1;
            }
            set
            {
                OnArgID1Changing(value);
                ReportPropertyChanging("ArgID1");
                _ArgID1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArgID1");
                OnArgID1Changed();
            }
        }
        private global::System.Int64 _ArgID1;
        partial void OnArgID1Changing(global::System.Int64 value);
        partial void OnArgID1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TaxReceiverID
        {
            get
            {
                return _TaxReceiverID;
            }
            set
            {
                OnTaxReceiverIDChanging(value);
                ReportPropertyChanging("TaxReceiverID");
                _TaxReceiverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxReceiverID");
                OnTaxReceiverIDChanged();
            }
        }
        private global::System.Int64 _TaxReceiverID;
        partial void OnTaxReceiverIDChanging(global::System.Int64 value);
        partial void OnTaxReceiverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxAmount
        {
            get
            {
                return _TaxAmount;
            }
            set
            {
                OnTaxAmountChanging(value);
                ReportPropertyChanging("TaxAmount");
                _TaxAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxAmount");
                OnTaxAmountChanged();
            }
        }
        private global::System.Decimal _TaxAmount;
        partial void OnTaxAmountChanging(global::System.Decimal value);
        partial void OnTaxAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Journal_0", "Wallets")]
        public Wallets Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Journal_0", "Wallets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Journal_0", "Wallets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallets> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Journal_0", "Wallets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallets>("EveTrader.Core.Model.FK_Journal_0", "Wallets", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="MarketOrders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarketOrders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketOrders object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="volumeEntered">Initial value of the VolumeEntered property.</param>
        /// <param name="volumeRemaining">Initial value of the VolumeRemaining property.</param>
        /// <param name="minimumVolume">Initial value of the MinimumVolume property.</param>
        /// <param name="orderState">Initial value of the OrderState property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="accountKey">Initial value of the AccountKey property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="escrow">Initial value of the Escrow property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="bid">Initial value of the Bid property.</param>
        /// <param name="issued">Initial value of the Issued property.</param>
        public static MarketOrders CreateMarketOrders(global::System.Int64 id, global::System.Int64 stationID, global::System.Int64 volumeEntered, global::System.Int64 volumeRemaining, global::System.Int64 minimumVolume, global::System.Int64 orderState, global::System.Int64 typeID, global::System.Int64 range, global::System.Int64 accountKey, global::System.Int64 duration, global::System.Decimal escrow, global::System.Decimal price, global::System.Boolean bid, global::System.DateTime issued)
        {
            MarketOrders marketOrders = new MarketOrders();
            marketOrders.ID = id;
            marketOrders.StationID = stationID;
            marketOrders.VolumeEntered = volumeEntered;
            marketOrders.VolumeRemaining = volumeRemaining;
            marketOrders.MinimumVolume = minimumVolume;
            marketOrders.OrderState = orderState;
            marketOrders.TypeID = typeID;
            marketOrders.Range = range;
            marketOrders.AccountKey = accountKey;
            marketOrders.Duration = duration;
            marketOrders.Escrow = escrow;
            marketOrders.Price = price;
            marketOrders.Bid = bid;
            marketOrders.Issued = issued;
            return marketOrders;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StationID
        {
            get
            {
                return _StationID;
            }
            set
            {
                OnStationIDChanging(value);
                ReportPropertyChanging("StationID");
                _StationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationID");
                OnStationIDChanged();
            }
        }
        private global::System.Int64 _StationID;
        partial void OnStationIDChanging(global::System.Int64 value);
        partial void OnStationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VolumeEntered
        {
            get
            {
                return _VolumeEntered;
            }
            set
            {
                OnVolumeEnteredChanging(value);
                ReportPropertyChanging("VolumeEntered");
                _VolumeEntered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolumeEntered");
                OnVolumeEnteredChanged();
            }
        }
        private global::System.Int64 _VolumeEntered;
        partial void OnVolumeEnteredChanging(global::System.Int64 value);
        partial void OnVolumeEnteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VolumeRemaining
        {
            get
            {
                return _VolumeRemaining;
            }
            set
            {
                OnVolumeRemainingChanging(value);
                ReportPropertyChanging("VolumeRemaining");
                _VolumeRemaining = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolumeRemaining");
                OnVolumeRemainingChanged();
            }
        }
        private global::System.Int64 _VolumeRemaining;
        partial void OnVolumeRemainingChanging(global::System.Int64 value);
        partial void OnVolumeRemainingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MinimumVolume
        {
            get
            {
                return _MinimumVolume;
            }
            set
            {
                OnMinimumVolumeChanging(value);
                ReportPropertyChanging("MinimumVolume");
                _MinimumVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumVolume");
                OnMinimumVolumeChanged();
            }
        }
        private global::System.Int64 _MinimumVolume;
        partial void OnMinimumVolumeChanging(global::System.Int64 value);
        partial void OnMinimumVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderState
        {
            get
            {
                return _OrderState;
            }
            set
            {
                OnOrderStateChanging(value);
                ReportPropertyChanging("OrderState");
                _OrderState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderState");
                OnOrderStateChanged();
            }
        }
        private global::System.Int64 _OrderState;
        partial void OnOrderStateChanging(global::System.Int64 value);
        partial void OnOrderStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int64 _TypeID;
        partial void OnTypeIDChanging(global::System.Int64 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.Int64 _Range;
        partial void OnRangeChanging(global::System.Int64 value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountKey
        {
            get
            {
                return _AccountKey;
            }
            set
            {
                OnAccountKeyChanging(value);
                ReportPropertyChanging("AccountKey");
                _AccountKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountKey");
                OnAccountKeyChanged();
            }
        }
        private global::System.Int64 _AccountKey;
        partial void OnAccountKeyChanging(global::System.Int64 value);
        partial void OnAccountKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int64 _Duration;
        partial void OnDurationChanging(global::System.Int64 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Escrow
        {
            get
            {
                return _Escrow;
            }
            set
            {
                OnEscrowChanging(value);
                ReportPropertyChanging("Escrow");
                _Escrow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Escrow");
                OnEscrowChanged();
            }
        }
        private global::System.Decimal _Escrow;
        partial void OnEscrowChanging(global::System.Decimal value);
        partial void OnEscrowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Bid
        {
            get
            {
                return _Bid;
            }
            set
            {
                OnBidChanging(value);
                ReportPropertyChanging("Bid");
                _Bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bid");
                OnBidChanged();
            }
        }
        private global::System.Boolean _Bid;
        partial void OnBidChanging(global::System.Boolean value);
        partial void OnBidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Issued
        {
            get
            {
                return _Issued;
            }
            set
            {
                OnIssuedChanging(value);
                ReportPropertyChanging("Issued");
                _Issued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Issued");
                OnIssuedChanged();
            }
        }
        private global::System.DateTime _Issued;
        partial void OnIssuedChanging(global::System.DateTime value);
        partial void OnIssuedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_MarketOrders_0", "Entity")]
        public Entities Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_MarketOrders_0", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_MarketOrders_0", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entities> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_MarketOrders_0", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entities>("EveTrader.Core.Model.FK_MarketOrders_0", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Transactions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(ApiTransactions))]
    [KnownTypeAttribute(typeof(CustomTransactions))]
    public partial class Transactions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transactions object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        /// <param name="stationID">Initial value of the StationID property.</param>
        /// <param name="stationName">Initial value of the StationName property.</param>
        /// <param name="transactionType">Initial value of the TransactionType property.</param>
        /// <param name="transactionFor">Initial value of the TransactionFor property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="ignored">Initial value of the Ignored property.</param>
        public static Transactions CreateTransactions(global::System.Int64 id, global::System.Int64 quantity, global::System.String typeName, global::System.Int64 typeID, global::System.Decimal price, global::System.Int64 clientID, global::System.String clientName, global::System.Int64 stationID, global::System.String stationName, global::System.Int64 transactionType, global::System.Int64 transactionFor, global::System.DateTime date, global::System.Boolean ignored)
        {
            Transactions transactions = new Transactions();
            transactions.ID = id;
            transactions.Quantity = quantity;
            transactions.TypeName = typeName;
            transactions.TypeID = typeID;
            transactions.Price = price;
            transactions.ClientID = clientID;
            transactions.ClientName = clientName;
            transactions.StationID = stationID;
            transactions.StationName = stationName;
            transactions.TransactionType = transactionType;
            transactions.TransactionFor = transactionFor;
            transactions.Date = date;
            transactions.Ignored = ignored;
            return transactions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int64 _Quantity;
        partial void OnQuantityChanging(global::System.Int64 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int64 _TypeID;
        partial void OnTypeIDChanging(global::System.Int64 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int64 _ClientID;
        partial void OnClientIDChanging(global::System.Int64 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StationID
        {
            get
            {
                return _StationID;
            }
            set
            {
                OnStationIDChanging(value);
                ReportPropertyChanging("StationID");
                _StationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationID");
                OnStationIDChanged();
            }
        }
        private global::System.Int64 _StationID;
        partial void OnStationIDChanging(global::System.Int64 value);
        partial void OnStationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StationName
        {
            get
            {
                return _StationName;
            }
            set
            {
                OnStationNameChanging(value);
                ReportPropertyChanging("StationName");
                _StationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StationName");
                OnStationNameChanged();
            }
        }
        private global::System.String _StationName;
        partial void OnStationNameChanging(global::System.String value);
        partial void OnStationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionType
        {
            get
            {
                return _TransactionType;
            }
            set
            {
                OnTransactionTypeChanging(value);
                ReportPropertyChanging("TransactionType");
                _TransactionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionType");
                OnTransactionTypeChanged();
            }
        }
        private global::System.Int64 _TransactionType;
        partial void OnTransactionTypeChanging(global::System.Int64 value);
        partial void OnTransactionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransactionFor
        {
            get
            {
                return _TransactionFor;
            }
            set
            {
                OnTransactionForChanging(value);
                ReportPropertyChanging("TransactionFor");
                _TransactionFor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionFor");
                OnTransactionForChanged();
            }
        }
        private global::System.Int64 _TransactionFor;
        partial void OnTransactionForChanging(global::System.Int64 value);
        partial void OnTransactionForChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ignored
        {
            get
            {
                return _Ignored;
            }
            set
            {
                OnIgnoredChanging(value);
                ReportPropertyChanging("Ignored");
                _Ignored = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ignored");
                OnIgnoredChanged();
            }
        }
        private global::System.Boolean _Ignored;
        partial void OnIgnoredChanging(global::System.Boolean value);
        partial void OnIgnoredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Transactions_0", "Wallets")]
        public Wallets Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Transactions_0", "Wallets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Transactions_0", "Wallets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallets> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_Transactions_0", "Wallets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallets>("EveTrader.Core.Model.FK_Transactions_0", "Wallets", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="WalletHistories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WalletHistories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WalletHistories object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static WalletHistories CreateWalletHistories(global::System.Int64 id, global::System.Decimal balance, global::System.DateTime date)
        {
            WalletHistories walletHistories = new WalletHistories();
            walletHistories.ID = id;
            walletHistories.Balance = balance;
            walletHistories.Date = date;
            return walletHistories;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_WalletHistories_0", "Wallets")]
        public Wallets Wallet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_WalletHistories_0", "Wallets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_WalletHistories_0", "Wallets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wallets> WalletReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wallets>("EveTrader.Core.Model.FK_WalletHistories_0", "Wallets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wallets>("EveTrader.Core.Model.FK_WalletHistories_0", "Wallets", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EveTrader.Core.Model", Name="Wallets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wallets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wallets object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="accountKey">Initial value of the AccountKey property.</param>
        public static Wallets CreateWallets(global::System.Int64 id, global::System.String name, global::System.Decimal balance, global::System.Int64 accountKey)
        {
            Wallets wallets = new Wallets();
            wallets.ID = id;
            wallets.Name = name;
            wallets.Balance = balance;
            wallets.AccountKey = accountKey;
            return wallets;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountKey
        {
            get
            {
                return _AccountKey;
            }
            set
            {
                OnAccountKeyChanging(value);
                ReportPropertyChanging("AccountKey");
                _AccountKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountKey");
                OnAccountKeyChanged();
            }
        }
        private global::System.Int64 _AccountKey;
        partial void OnAccountKeyChanging(global::System.Int64 value);
        partial void OnAccountKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Wallets_0", "Entity")]
        public Entities Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_Wallets_0", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_Wallets_0", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entities> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entities>("EveTrader.Core.Model.FK_Wallets_0", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entities>("EveTrader.Core.Model.FK_Wallets_0", "Entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Journal_0", "Journal")]
        public EntityCollection<Journal> Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("EveTrader.Core.Model.FK_Journal_0", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("EveTrader.Core.Model.FK_Journal_0", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_Transactions_0", "Transactions")]
        public EntityCollection<Transactions> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transactions>("EveTrader.Core.Model.FK_Transactions_0", "Transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transactions>("EveTrader.Core.Model.FK_Transactions_0", "Transactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EveTrader.Core.Model", "FK_WalletHistories_0", "WalletHistories")]
        public EntityCollection<WalletHistories> WalletHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WalletHistories>("EveTrader.Core.Model.FK_WalletHistories_0", "WalletHistories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WalletHistories>("EveTrader.Core.Model.FK_WalletHistories_0", "WalletHistories", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
