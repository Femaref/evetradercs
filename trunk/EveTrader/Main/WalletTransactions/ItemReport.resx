<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>