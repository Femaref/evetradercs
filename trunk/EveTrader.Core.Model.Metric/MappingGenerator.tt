<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ output extension="cs" #>
<#@ import namespace="System" #>
<#@ assembly name="System.Data.Entity" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="EveTrader.Core.Model.Metric" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Collections" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ include file="T4Toolbox.tt" #>
<#@ VolatileAssembly processor="T4Toolbox.VolatileAssemblyProcessor" name="..\EveTrader.Core.Model.Metric\bin\Release\EveTrader.Core.Model.Metric.dll" #>
<#@ VolatileAssembly processor="T4Toolbox.VolatileAssemblyProcessor" name="..\EveTrader.Core.Interfaces\bin\Release\EveTrader.Core.Interfaces.dll" #>

// <copyright file="DtoGenerator.tt" company="Elvian Empire">
//  Copyright Â© Elvian Empire. All Rights Reserved.
// </copyright>
// Code generated by a template
using System;
using System.Collections.Generic;
using EveTrader.Core.Services;

namespace EveTrader.Core.Model.Metric
{
<# PushIndent("    ");
WriteLine("public class MetricMappings : IMappingCreator");
WriteLine("{");
PushIndent("    ");
WriteLine("public void CreateMappings()");
WriteLine("{");
            
        
foreach(var t in Assembly.GetAssembly(typeof(MetricModel)).GetTypes().Where(s => s.IsSubclassOf(typeof(EntityObject))))
{ 	
	WriteLine(string.Format("AutoMapper.Mapper.CreateMap<{0}, {0}Dto>();", t.Name));
	WriteLine(string.Format("AutoMapper.Mapper.CreateMap<{0}Dto, {0}>();", t.Name));
}
WriteLine("}");
PopIndent();
WriteLine("}");
PopIndent();
WriteLine("}"); #>