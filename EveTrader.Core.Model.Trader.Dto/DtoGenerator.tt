<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ output extension="cs" #>
<#@ import namespace="System" #>
<#@ assembly name="System.Data.Entity" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="EveTrader.Core.Model.Trader" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="Manager.tt" #>
<#@ VolatileAssembly processor="T4Toolbox.VolatileAssemblyProcessor" name="..\EveTrader.Core.Model.Trader\bin\Debug\EveTrader.Core.Model.Trader.dll" #>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>

// <copyright file="DtoGenerator.tt" company="Elvian Empire">
//  Copyright Â© Elvian Empire. All Rights Reserved.
// </copyright>
<# manager.StartHeader(); #>
// Code generated by a template
using System;

namespace EveTrader.Core.Model.Trader
{
<# manager.EndBlock(); #>
<#foreach(var t in Assembly.GetAssembly(typeof(TraderModel)).GetTypes().Where(s => s.IsSubclassOf(typeof(EntityObject))))
{ 	#>
<#manager.StartNewFile(t.Name + ".generated.cs");#>
	public class <#= t.Name #>Dto
	{
		<#foreach(var pt in t.GetProperties())
		{#>
			<#if(pt.PropertyType.Namespace == "System" && pt.CanRead && pt.CanWrite)
			{#>
					
		public <#=pt.PropertyType#> <#=pt.Name#> { get; set; }	
	
			<#}#>
		<#}#>
	}
	
<#manager.EndBlock(); #>
<#} #>
<# manager.StartFooter(); #>
}
<# manager.EndBlock(); #>
<# manager.Process(false); #>